/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import Controller.Controller;
import domain.object.entities.Nekretnina;
import domain.object.entities.NekretninaProdavca;
import domain.object.entities.Osoba;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author korisnik
 */
public class formNekretnineProdavca extends javax.swing.JFrame {

    List<Osoba> osobe = new LinkedList<>();
    List<Osoba> pronadjeneOsobe = new LinkedList<>();
    List<Nekretnina> nekretnine = new LinkedList<>();
    List<Nekretnina> pronadjeneNekretnine = new LinkedList<>();
    List<NekretninaProdavca> nekretnineProdavca = new LinkedList<>();
    List<NekretninaProdavca> pronadjeneNekProd = new LinkedList<>();
    
    public formNekretnineProdavca() throws Exception {
        initComponents();
        setTitle("Nekretnine prodavca");
        setLocationRelativeTo(this);
        ucitajPodatkeUFormu();
        setUpTableListener();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtUdeo = new javax.swing.JTextField();
        cmbJmbg = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnSacuvaj = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNekProd = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtOsnovSticanja = new javax.swing.JTextField();
        cmbNekretnina = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Udeo vlasnistva");

        cmbJmbg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Nekretnina Id");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jLabel11.setText("Jmbg prodavca");

        jLabel1.setText("Zaposleni");

        tblNekProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nekretnina Id", "Jmbg", "Udeo vlasnistva", "Osnov sticanja"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNekProd);

        jLabel5.setText("Osnov sticanja");

        cmbNekretnina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel4))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbNekretnina, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtUdeo, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSacuvaj))
                    .addComponent(txtOsnovSticanja, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmbNekretnina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUdeo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnSacuvaj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtOsnovSticanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   private void ucitajPodatkeUFormu() throws Exception {
    osobe = Controller.getInstance().loadSveOsobe();
    cmbJmbg.removeAllItems();
    for (Osoba o : osobe) {
        cmbJmbg.addItem(String.valueOf(o.getJMBG()));
    }
    
    nekretnine = Controller.getInstance().loadSveNekretnine();
    cmbNekretnina.removeAllItems();
    for(Nekretnina o : nekretnine){
        cmbNekretnina.addItem(String.valueOf(o.getNekretninaID()));
    }
    
    ucitajNekretnineProdavca();
}


    public void ucitajNekretnineProdavca() throws Exception {
       DefaultTableModel modelNekProd = (DefaultTableModel) tblNekProd.getModel();
       modelNekProd.setRowCount(0);
       nekretnineProdavca = Controller.getInstance().loadSveNekretnineProdavca();

        for (NekretninaProdavca np : nekretnineProdavca) {
            modelNekProd.addRow(new Object[]{np.getNekretninaID(), np.getJmbg(), np.getUdeoVlasnistva(), np.getOsnovSticanja()});
        }
    }

    private NekretninaProdavca jeIzabranaNekProd() {
        int nekretninaId = 0;
        String prodavacId ="";
        
        int izabraniNekProdIndex = tblNekProd.getSelectedRow();
        if (izabraniNekProdIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblNekProd.getModel();
            
            Object izabranNekretninaId = model.getValueAt(izabraniNekProdIndex, 0);
            Object izabranProdavacId = model.getValueAt(izabraniNekProdIndex, 1);
            
            nekretninaId = (Integer) izabranNekretninaId;
            prodavacId= izabranProdavacId.toString();
        }
        NekretninaProdavca np = new NekretninaProdavca();
        np.setNekretninaID(nekretninaId);
        np.setJmbg(prodavacId);
        return np;
    }
    
      private void setUpTableListener() {
        tblNekProd.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                try {
                    NekretninaProdavca izabranaNekProd = jeIzabranaNekProd();
                    pronadjeneNekProd = Controller.getInstance().searchNekretnineProdavca("NEKRETNINAID='" + String.valueOf(izabranaNekProd.getNekretninaID()) +"' AND JMBG =" + String.valueOf(izabranaNekProd.getJmbg()));
                    
                    if (pronadjeneNekProd != null && !pronadjeneNekProd.isEmpty()) {
                        izabranaNekProd = pronadjeneNekProd.get(0);
                    }
                    popuniFormuIzabranomNekretninomProdavca(izabranaNekProd);
                } catch (Exception ex) {
                    Logger.getLogger(formNekretnineProdavca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
      
       private void popuniFormuIzabranomNekretninomProdavca(NekretninaProdavca np) throws Exception {
            if (np != null) {
                txtOsnovSticanja.setText(String.valueOf(np.getOsnovSticanja()));
                txtUdeo.setText(String.valueOf(np.getUdeoVlasnistva()));

                pronadjeneOsobe = Controller.getInstance().searchOsobe("JMBG='" + String.valueOf(np.getJmbg()) + "'");
                cmbJmbg.setSelectedItem(pronadjeneOsobe.get(0).getJMBG());

                pronadjeneNekretnine = Controller.getInstance().searchNekretnine("NEKRETNINAID='" + String.valueOf(np.getNekretninaID()) + "'");
                cmbNekretnina.setSelectedItem(String.valueOf(pronadjeneNekretnine.get(0).getNekretninaID()));
            }
        }
       
    private NekretninaProdavca preuzmiPodatkeZaNekretninuProdavca() throws Exception {
        String udeoVlasnistva = txtUdeo.getText();
        String osnovSticanja = txtOsnovSticanja.getText();
        
        Object izabranaNekretnina = cmbNekretnina.getSelectedItem();
        int nekretninaId = Integer.parseInt(izabranaNekretnina.toString());
        //pronadjeneNekretnine = Controller.getInstance().searchNekretnine("NEKRETNINAID= '"+ nekretninaId+ "'");
        
        Object izabranProdavac=  cmbJmbg.getSelectedItem();
        String prodavacId= izabranProdavac.toString();
        //pronadjeneOsobe = Controller.getInstance().searchOsobe("JMBG='" + izabranProdavac + "'");

        NekretninaProdavca np = new NekretninaProdavca(nekretninaId,prodavacId, udeoVlasnistva, osnovSticanja);

        return np;
    }
    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
         try {
            NekretninaProdavca nekretninaProdavca = preuzmiPodatkeZaNekretninuProdavca();

            Controller.getInstance().insertNekretninaProdavca(nekretninaProdavca);

            ucitajNekretnineProdavca();
        } catch (Exception ex) {
            Logger.getLogger(formNekretnineProdavca.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Doslo je do greske: " + ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formNekretnineProdavca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new formNekretnineProdavca().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(formNekretnineProdavca.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<String> cmbJmbg;
    private javax.swing.JComboBox<String> cmbNekretnina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNekProd;
    private javax.swing.JTextField txtOsnovSticanja;
    private javax.swing.JTextField txtUdeo;
    // End of variables declaration//GEN-END:variables
}
