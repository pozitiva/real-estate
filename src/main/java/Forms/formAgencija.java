/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import Controller.Controller;
import domain.object.entities.Adresa;
import domain.object.entities.AgencijaOsnovno;
import domain.object.entities.AgencijaPogled;
import java.awt.event.ActionEvent;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author korisnik
 */
public class formAgencija extends javax.swing.JFrame {

    List<Adresa> adrese = new LinkedList<>();
    List<Adresa> pronadjeneAdrese = new LinkedList<>();
    List<AgencijaOsnovno> agencijaOsnovno = new LinkedList<>();
    List<AgencijaPogled> pronadjenaIzabranaAgencija = new LinkedList<>();
    
    public formAgencija() throws Exception {
        initComponents();
        setTitle("Agencija");
        setLocationRelativeTo(this);
        ucitajPodatkeUFormu();
        setUpTableListener();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaticniBroj = new javax.swing.JTextField();
        cmbAdresa = new javax.swing.JComboBox<>();
        cmbGrad = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgencija = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        txtVlasnik = new javax.swing.JTextField();
        txtPib = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Adresa Id");

        jLabel2.setText("Naziv");

        cmbAdresa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAdresa.setSelectedIndex(-1);

        cmbGrad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Maticni broj");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        jLabel1.setText("Agencija");

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tblAgencija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Maticni broj", "Naziv", "PIB"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAgencija);

        jLabel7.setText("Grad Id");

        jLabel3.setText("Vlasnik");

        jLabel5.setText("PIB");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaticniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVlasnik, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPib, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi))
                .addGap(0, 43, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnIzmeni)
                        .addGap(18, 18, 18)
                        .addComponent(btnSacuvaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(cmbAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtMaticniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtVlasnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   private void ucitajPodatkeUFormu() throws Exception {

    ucitajGradove();

    cmbGrad.addActionListener((ActionEvent evt) -> {
        try {
            ucitajAdreseZaGradove();
        } catch (Exception ex) {
            Logger.getLogger(formAgencija.class.getName()).log(Level.SEVERE, null, ex);
        }
    });

    cmbAdresa.setEnabled(false);

    ucitajAgencije();
}

private void ucitajGradove() throws Exception {
    adrese = Controller.getInstance().loadSveAdrese();
    cmbGrad.removeAllItems();
    Set<String> jedinstveniGradId = new HashSet<>();
    for (Adresa a : adrese) {
        jedinstveniGradId.add(String.valueOf(a.getGradID()));
    }
    for (String gradId : jedinstveniGradId) {
        cmbGrad.addItem(gradId);
    }
}


private void ucitajAdreseZaGradove() throws Exception {
    String izabraniGradId = (String) cmbGrad.getSelectedItem();
    cmbAdresa.removeAllItems();
    
        if (izabraniGradId != null) {
            List<Adresa> filtriraneAdrese = Controller.getInstance().searchAdrese("GRADID='" + String.valueOf(izabraniGradId) + "'");

            cmbAdresa.removeAllItems();  
            for (Adresa a : filtriraneAdrese) {
                System.out.println("Dodajem adresu: " + a.getUlicaIBroj());
                cmbAdresa.addItem(a.getUlicaIBroj());  
            }
            cmbAdresa.setEnabled(!filtriraneAdrese.isEmpty());
        }
    }

    private void resetujPoljaZaAgenciju() {
        txtMaticniBroj.setText("");
        txtNaziv.setText("");
        txtVlasnik.setText("");
        txtPib.setText("");
        cmbAdresa.setSelectedIndex(0); 
        cmbGrad.setSelectedIndex(0);
    }

    public void ucitajAgencije() throws Exception {
        DefaultTableModel modelAgencije = (DefaultTableModel) tblAgencija.getModel();
        modelAgencije.setRowCount(0);
        
        agencijaOsnovno = Controller.getInstance().loadSveAgencijeOsnovno();

        for (AgencijaOsnovno a : agencijaOsnovno) {
            modelAgencije.addRow(new Object[]{a.getMaticniBroj(), a.getNaziv(), a.getPib()});
        }
    }

    private AgencijaPogled jeIzabranaAgencija() {
        String maticniBroj = "";
        int izabranaAgencijaIndex = tblAgencija.getSelectedRow();
        if (izabranaAgencijaIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblAgencija.getModel();
            Object izabraniID = model.getValueAt(izabranaAgencijaIndex, 0);

            maticniBroj =  (String) izabraniID;
        }
        AgencijaPogled a = new AgencijaPogled();
        a.setMaticniBroj(maticniBroj);
        return a;
    }
    
      private void setUpTableListener() {
        tblAgencija.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                try {
                    AgencijaPogled izabranaAgencija = jeIzabranaAgencija();
                    pronadjenaIzabranaAgencija = Controller.getInstance().searchAgencije("MATICNIBROJ='" + String.valueOf(izabranaAgencija.getMaticniBroj()) + "'");
                    
                    if (pronadjenaIzabranaAgencija != null && !pronadjenaIzabranaAgencija.isEmpty()) {
                        izabranaAgencija = pronadjenaIzabranaAgencija.get(0);
                    }
                    popuniFormuIzabranomAgencijom(izabranaAgencija);
                } catch (Exception ex) {
                    Logger.getLogger(formAgencija.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
      
       private void popuniFormuIzabranomAgencijom(AgencijaPogled ap) throws Exception {
        if (ap != null) {
            txtMaticniBroj.setText(String.valueOf(ap.getMaticniBroj()));
            txtNaziv.setText(String.valueOf(ap.getNaziv()));
            txtPib.setText(String.valueOf(ap.getPib()));
            txtVlasnik.setText(String.valueOf(ap.getVlasnik()));

            pronadjeneAdrese = Controller.getInstance().searchAdrese("GRADID='" + String.valueOf(ap.getGradID()) + "' AND ADRESAID='" + String.valueOf(ap.getAdresaID()) + "'");
            
            cmbGrad.setSelectedItem(String.valueOf(pronadjeneAdrese.get(0).getGradID()));
            cmbAdresa.setEnabled(true);
            cmbAdresa.setSelectedItem(String.valueOf(pronadjeneAdrese.get(0).getUlicaIBroj()));
            
        }
    }
       
        private AgencijaPogled preuzmiPodatkeZaAgenciju() throws Exception {
        String maticniBroj = txtMaticniBroj.getText();
        String naziv = txtNaziv.getText();
        String pib = txtPib.getText();
        String vlasnik = txtVlasnik.getText();

       Object izabraniGrad = cmbGrad.getSelectedItem();
        int gradId = Integer.parseInt(izabraniGrad.toString());
        
        Object izabranaAdresa = cmbAdresa.getSelectedItem();
        pronadjeneAdrese = Controller.getInstance().searchAdrese("ULICABROJ='" + izabranaAdresa.toString() + "'");
        int adresaId = pronadjeneAdrese.get(0).getAdresaID();

        AgencijaPogled ap = new AgencijaPogled(maticniBroj, naziv, pib, vlasnik, adresaId, gradId);
        return ap;
    }
    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
         try {
            AgencijaPogled agencija = preuzmiPodatkeZaAgenciju();
            Controller.getInstance().insertAgencijaPogled(agencija);
            resetujPoljaZaAgenciju();
            ucitajAgencije();
        } catch (Exception ex) {
            Logger.getLogger(formAgencija.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Doslo je do greske: " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
         try {
            AgencijaPogled ap = preuzmiPodatkeZaAgenciju();
            Controller.getInstance().updateAgencija(ap);
            resetujPoljaZaAgenciju();
            ucitajAgencije();
        } catch (Exception ex) {
            Logger.getLogger(formAgencija.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Doslo je do greske: " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            AgencijaPogled ap = jeIzabranaAgencija();
            Controller.getInstance().deleteAgencija(ap);
            ucitajAgencije();
        } catch (Exception ex) {
            Logger.getLogger(formAgencija.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Doslo je do greske: " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formAgencija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formAgencija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formAgencija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formAgencija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new formAgencija().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(formAgencija.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<String> cmbAdresa;
    private javax.swing.JComboBox<String> cmbGrad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAgencija;
    private javax.swing.JTextField txtMaticniBroj;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtPib;
    private javax.swing.JTextField txtVlasnik;
    // End of variables declaration//GEN-END:variables
}
